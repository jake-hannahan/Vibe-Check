stages:
  - test
  - build
  - deploy

# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - pip install black
    - flake8 vibe_check
    - black vibe_check

# Run the unit tests
api-unit-test-job:
  image: python:3-bullseye
  stage: test
  needs:
    - lint-test-job
  script:
    - cd vibe_check
    - pip install -r requirements.txt
    - python -m pytest

# Build the backend
build-docker-main:
  image: docker:20
  stage: build
  needs:
    - lint-test-job
    - api-unit-test-job
  services:
    - docker:20-dind
  before_script:
    - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER # built-in GitLab Registry User
    - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD # built-in GitLab Registry Password
    - export DOCKER_REGISTRY_URL=$CI_REGISTRY # built-in GitLab Registry URL
    - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE # Your repository prefixed with GitLab Registry URL
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry
  script:
    - cd vibe_check
    # EVERYWHERE IT SHOWS my-build-image (1 place) && built-image-name (2 places)BELOW, CHANGE THOSE
    # TO A MORE MEANINGFUL SERVICE NAME
    - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/vibe-check:$COMMIT_HASH
    - docker build -f ./Dockerfile --pull -t vibe .
    - docker tag vibe "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    #only - this should be updated with the default branch {master, main}
  only:
    - main

# Build the React/JavaScript front-end
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - build-docker-main
  variables:
    PUBLIC_URL: https://vibe-check.gitlab.io/vibe-check
  script:
    - cd ghi # CHANGE THIS TO THE DIRECTORY THAT HAS package.json
    - npm install
    - npm run build
    - cp build/index.html build/404.html # Make this a SPA
  artifacts:
    paths:
      - ghi/build/ # Save all of the files in the build path

# Deploy the React/JavaScript front-end to GitLab pages
pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
